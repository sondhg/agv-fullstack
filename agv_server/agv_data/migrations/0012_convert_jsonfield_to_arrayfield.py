# Generated by custom migration to handle JSONField to ArrayField conversion
import django.contrib.postgres.fields
from django.db import migrations, models


def convert_jsonfield_to_arrayfield(apps, schema_editor):
    """
    Convert JSONField data to ArrayField compatible format.
    This handles cases where JSONField contains arrays of integers.
    """
    Agv = apps.get_model("agv_data", "Agv")

    # Process each AGV record
    for agv in Agv.objects.all():
        # Convert each field if it's not already a list
        fields_to_convert = [
            "initial_path",
            "remaining_path",
            "outbound_path",
            "return_path",
            "common_nodes",
            "adjacent_common_nodes",
        ]

        updated = False
        for field_name in fields_to_convert:
            field_value = getattr(agv, field_name)
            new_field_name = f"{field_name}_new"

            # If field is None or not a list, convert to empty list
            if field_value is None or not isinstance(field_value, list):
                setattr(agv, new_field_name, [])
                updated = True
            else:
                # Ensure all elements are integers
                try:
                    int_list = [int(x) for x in field_value if x is not None]
                    setattr(agv, new_field_name, int_list)
                    updated = True
                except (ValueError, TypeError):
                    # If conversion fails, set to empty list
                    setattr(agv, new_field_name, [])
                    updated = True

        if updated:
            agv.save()


def reverse_convert_arrayfield_to_jsonfield(apps, schema_editor):
    """
    Reverse operation - convert ArrayField back to JSONField format.
    """
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("agv_data", "0011_agv_outbound_path_agv_return_path"),
    ]

    operations = [
        # Step 1: Add new ArrayField columns
        migrations.AddField(
            model_name="agv",
            name="adjacent_common_nodes_new",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.IntegerField(),
                default=list,
                help_text="SCP: Sequential shared points",
                size=None,
            ),
        ),
        migrations.AddField(
            model_name="agv",
            name="common_nodes_new",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.IntegerField(),
                default=list,
                help_text="CP: Shared points with other AGVs",
                size=None,
            ),
        ),
        migrations.AddField(
            model_name="agv",
            name="initial_path_new",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.IntegerField(),
                default=list,
                help_text="P_i^j: Path of AGV i performing task j. Once generated, will not change.",
                size=None,
            ),
        ),
        migrations.AddField(
            model_name="agv",
            name="outbound_path_new",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.IntegerField(),
                default=list,
                help_text="Path from parking node to workstation node.",
                size=None,
            ),
        ),
        migrations.AddField(
            model_name="agv",
            name="remaining_path_new",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.IntegerField(),
                default=list,
                help_text="Pi_i: Remaining points to be visited by AGV i.",
                size=None,
            ),
        ),
        migrations.AddField(
            model_name="agv",
            name="return_path_new",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.IntegerField(),
                default=list,
                help_text="Path from workstation node back to parking node.",
                size=None,
            ),
        ),
        # Step 2: Migrate data from old JSONField to new ArrayField
        migrations.RunPython(
            convert_jsonfield_to_arrayfield,
            reverse_convert_arrayfield_to_jsonfield,
        ),
        # Step 3: Remove old JSONField columns
        migrations.RemoveField(
            model_name="agv",
            name="adjacent_common_nodes",
        ),
        migrations.RemoveField(
            model_name="agv",
            name="common_nodes",
        ),
        migrations.RemoveField(
            model_name="agv",
            name="initial_path",
        ),
        migrations.RemoveField(
            model_name="agv",
            name="outbound_path",
        ),
        migrations.RemoveField(
            model_name="agv",
            name="remaining_path",
        ),
        migrations.RemoveField(
            model_name="agv",
            name="return_path",
        ),
        # Step 4: Rename new fields to original names
        migrations.RenameField(
            model_name="agv",
            old_name="adjacent_common_nodes_new",
            new_name="adjacent_common_nodes",
        ),
        migrations.RenameField(
            model_name="agv",
            old_name="common_nodes_new",
            new_name="common_nodes",
        ),
        migrations.RenameField(
            model_name="agv",
            old_name="initial_path_new",
            new_name="initial_path",
        ),
        migrations.RenameField(
            model_name="agv",
            old_name="outbound_path_new",
            new_name="outbound_path",
        ),
        migrations.RenameField(
            model_name="agv",
            old_name="remaining_path_new",
            new_name="remaining_path",
        ),
        migrations.RenameField(
            model_name="agv",
            old_name="return_path_new",
            new_name="return_path",
        ),
    ]
